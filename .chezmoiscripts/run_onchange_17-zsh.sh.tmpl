{{ if .variables.zsh -}}
#!/bin/bash
echo "18 : run_18-zsh.sh"

# Sourcing helper functions and variables
source "$HOME/.local/share/chezmoi/.chezmoiscripts/run_00-helper.sh"

# ðŸ’« https://github.com/JaKooLit ðŸ’« #
# zsh and oh my zsh

zsh=(
    zsh
    # Plugin manager
    zsh-antidote
    # Shell prompt (cannot be installed with zsh-antidote)
    starship
    # Better and smarter cd command
    zoxide
    # Plugins that cannot be installed with zsh-antidote
    thefuck # Allow to autocorrect a command
    bat     # Replace "cat" command with a more modern one
)

## WARNING: DO <NOT EDIT BEYOND THIS LINE IF YOU DON'T KNOW WHAT YOU ARE DOING! ##

# Set the name of the log file to include the current date and time
LOG="$HOME/.dotfiles/logs/install-$(date +%d-%H%M%S)_zsh.log"

install_ohmyzsh() {
    printf "${NOTE} Installing Oh My Zsh and plugins...\n"
    if [ ! -d "$HOME/.oh-my-zsh" ]; then
        sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended || true
    else
        echo "Directory .oh-my-zsh already exists. Skipping re-installation." 2>&1 | tee -a "$LOG"
    fi
    # Check if the directories exist before cloning the repositories
    if [ ! -d "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]; then
        git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions || true
    else
        echo "Directory zsh-autosuggestions already exists. Skipping cloning." 2>&1 | tee -a "$LOG"
    fi

    if [ ! -d "$HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting" ]; then
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting || true
    else
        echo "Directory zsh-syntax-highlighting already exists. Skipping cloning." 2>&1 | tee -a "$LOG"
    fi
}

# Installing zsh packages
printf "${NOTE} Installing core zsh packages...${RESET}\n"
for ZSH in "${zsh[@]}"; do
    install_package "$ZSH" 2>&1 | tee -a "$LOG"
    if [ $? -ne 0 ]; then
        echo -e "\e[1A\e[K${ERROR} - $ZSH Package installation failed, Please check the installation logs"
    fi
done

# Install Oh My Zsh, plugins, and set zsh as default shell
if command -v zsh >/dev/null; then
    {{ if .variables.oh_my_zsh -}}
    echo "install_oh_my_zsh"
    {{ end }}

    {{ if .variables.starship -}}
    echo "install_starship"
    {{ end }}

    # ZDOTDIR=~/.config/zsh
    # # symlink .zshenv
    # [[ -f ~/.zshenv ]] && mv -f ~/.zshenv ~/.zshenv.bak
    # ln -s $ZDOTDIR/.zshenv ~/.zshenv

    # Check if ~/.zshrc and .zprofile exists, create a backup, and copy the new configuration
    if [ -f "$HOME/.zshrc" ]; then
        cp -b "$HOME/.zshrc" "$HOME/.dotfiles/.zshrc-backup" || true
    fi

    if [ -f "$HOME/.zprofile" ]; then
        cp -b "$HOME/.zprofile" "$HOME/.dotfiles/.zprofile-backup" || true
    fi

    printf "${NOTE} Changing default shell to zsh...\n"

    while ! chsh -s $(which zsh); do
        echo "${ERROR} Authentication failed. Please enter the correct password." 2>&1 | tee -a "$LOG"
        sleep 1
    done
    printf "${NOTE} Shell changed successfully to zsh.\n" 2>&1 | tee -a "$LOG"

fi

{{ end }}
