# =============
# Core Settings
# =============
# History
HISTFILE=~/.histfile
HISTSIZE=10000
HISTDUP=erase
SAVEHIST=10000
setopt HIST_IGNORE_DUPS     # Don't record duplicated commands
setopt HIST_REDUCE_BLANKS   # Remove unnecessary blanks
setopt INC_APPEND_HISTORY   # Add commands to history immediately
setopt EXTENDED_HISTORY     # Record command start time
setopt SHAREHISTORY         # Share history between shells
setopt HIST_IGNORE_ALL_DUPS # Pretty much self explanatory...
setopt HIST_FIND_NO_DUPS

# General
unsetopt beep
setopt AUTO_CD       # Allow changing directories without cd
setopt EXTENDED_GLOB # Extended globbing
setopt NOTIFY        # Report status of background jobs immediately
setopt PROMPT_SUBST  # Enable prompt substitution

# =================
# Key Bindings
# =================
bindkey -e                                       # Emacs key bindings
bindkey '^[[A' history-beginning-search-backward # Up arrow
bindkey '^[[B' history-beginning-search-forward  # Down arrow
bindkey '^[[H' beginning-of-line                 # Home key
bindkey '^[[F' end-of-line                       # End key
bindkey '^[[3~' delete-char                      # Delete key
bindkey '^p' history-search-backward             # Search history for the related command backward
bindkey '^n' history-search-forward              # Search history for the related command forward

# =================
# Completion System
# =================
zstyle ':completion:*' menu select                        # Enable menu selection
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' # Case insensitive completion
zstyle ':completion:*' special-dirs true                  # Complete special directories
zstyle ':completion:*' list-colors ''                     # Colored completion
zstyle ':completion:*' verbose yes                        # Verbose completion messages
zstyle ':compinstall filename' '/home/raiden/.zshrc'

fpath=(~/.config/zsh/completion $fpath)
autoload -Uz compinit && compinit

# =================
# Custom Functions
# =================
function ls() {
    eza -i "$@" --icons=auto
}

function nvim() {
    $HOME/.config/hypr/scripts/kitty_nvim.sh "$@"
}

function open() {
    xdg-open "$@"
}

function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
    yazi "$@" --cwd-file="$tmp"
    IFS= read -r -d '' cwd < "$tmp"
    [ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
    rm -f -- "$tmp"
}

function cze() {
    if [ $# -eq 0 ]; then
        chezmoi edit
    else
        setopt local_options EXTENDED_GLOB
        chezmoi edit "$@"
    fi
}

function cza() {
    if [ $# -eq 0 ]; then
        chezmoi apply
    else
        setopt local_options EXTENDED_GLOB
        chezmoi apply
    fi
}

# CheZmoi EditConf
function czec() {
    nvim $HOME/.local/share/chezmoi/ansible/group_vars/all.yml
}

compdef _chezmoi cze
compdef _chezmoi cza
compdef _chezmoi czec

[ -f ~/.zshrc_external_func.zsh ] && source ~/.zshrc_external_func.zsh

# =================
# Aliases
# =================
# Additional useful aliases
alias ll='eza -l -i --icons=auto'
alias la='eza -la -i --icons=auto'
alias grep='grep --color=auto'
alias mkdir='mkdir -p'
alias cp='cp -i' # Confirm before overwriting
alias mv='mv -i' # Confirm before overwriting
alias rm='rm -i' # Confirm before removing

# =================
# Environment
# =================

export EDITOR="$HOME/.config/hypr/scripts/kitty_nvim.sh"
export PATH="$PATH:$HOME/.config/zsh/.antidote:$HOME/.local/bin"
export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
export CRYPTOGRAPHY_OPENSSL_NO_LEGACY=1
export AUR_PAGER='yazi'
export MANPAGER='nvim +Man!'

# =================
# Tool Integration
# =================
# Initialize zoxide (smarter cd)
eval "$(zoxide init zsh --cmd cd)"

# Initialize thefuck (command correction)
eval "$(thefuck --alias)"

# Initialize fzf
source <(fzf --zsh)

# Load antidote package manager
zstyle ':antidote:bundle' file "$HOME/.config/antidote/.zsh_plugins.txt"
source "$HOME/.config/antidote/antidote.zsh"
antidote load "${ZDOTDIR:-$HOME/.config/antidote}/.zsh_plugins.txt"

# Initialize conda
[ -f /opt/miniconda3/etc/profile.d/conda.sh ] && source /opt/miniconda3/etc/profile.d/conda.sh

# Start uwsm at tty1 for login
if [ "$(tty)" = "/dev/tty1" ]; then
    if uwsm check may-start && uwsm select; then
        exec systemd-cat -t uwsm_start uwsm start default
    fi
fi

# Initialize starship prompt (load last to ensure proper prompt initialization)
eval "$(starship init zsh)"
